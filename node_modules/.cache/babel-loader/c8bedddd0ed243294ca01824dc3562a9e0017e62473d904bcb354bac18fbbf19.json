{"ast":null,"code":"/*\nimport React, { Component } from 'react';\nimport { fetchBlogPost } from \"../actions/blogActions\";\nimport { setBlogPost } from \"../actions/blogActions\";\nimport {connect} from 'react-redux';\nimport {Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport ResponseForm from './responseForm';\n\nclass BlogDetail extends Component {\n\n    componentDidMount() {\n        const {dispatch} = this.props;\n        if (this.props.selectedBlogPost == null) {\n            dispatch(fetchBlogPost(this.props.blogId));\n            console.log(this.props.blogId);\n        }\n    }\n\n    render() {\n        const DetailInfo = () => {\n            if (!this.props.selectedBlogPost) {\n                return <div>Loading....</div>\n            }\n            console.log(this.props.selectedBlogPost);\n            return (\n                <Card>\n                    <Card.Header>Blog Post</Card.Header>\n                    <ListGroup>\n                        <ListGroupItem>{this.props.selectedBlogPost.title}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.body}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.author}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.date}</ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedBlogPost.replies.map((reply, i) =>\n                            <p key={i}>\n                                <b>{reply.authorId}</b>&nbsp; {reply.body}\n                            </p>\n                        )}\n                    </Card.Body>\n                </Card>\n            )\n        }\n\n        return (\n            <div>\n                <DetailInfo />\n                <ResponseForm id={this.props.selectedBlogPost}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBlogPost: state.blog.selectedBlogPost\n    }\n}\n\nexport default connect(mapStateToProps)(BlogDetail);\n\n\n\n<ListGroup>\n                        <ListGroupItem>{this.props.selectedMovie.title}</ListGroupItem>\n                        <ListGroupItem>\n                            {this.props.selectedMovie.actors.map((actor, i) =>\n                                <p key={i}>\n                                    <b>{actor.actorName}</b> {actor.characterName}\n                                </p>)}\n                        </ListGroupItem>\n                        <ListGroupItem><h4><BsStarFill/> {this.props.selectedMovie.avgRating}</h4></ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedMovie.reviews.map((review, i) =>\n                            <p key={i}>\n                                <b>{review.username}</b>&nbsp; {review.review}\n                                &nbsp;  <BsStarFill /> {review.rating}\n                            </p>\n                        )}\n                    </Card.Body>\n\n*/","map":{"version":3,"names":[],"sources":["/Users/brycebaker/Desktop/acm-site/src/components/blogdetail.js"],"sourcesContent":["/*\nimport React, { Component } from 'react';\nimport { fetchBlogPost } from \"../actions/blogActions\";\nimport { setBlogPost } from \"../actions/blogActions\";\nimport {connect} from 'react-redux';\nimport {Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport ResponseForm from './responseForm';\n\nclass BlogDetail extends Component {\n\n    componentDidMount() {\n        const {dispatch} = this.props;\n        if (this.props.selectedBlogPost == null) {\n            dispatch(fetchBlogPost(this.props.blogId));\n            console.log(this.props.blogId);\n        }\n    }\n\n    render() {\n        const DetailInfo = () => {\n            if (!this.props.selectedBlogPost) {\n                return <div>Loading....</div>\n            }\n            console.log(this.props.selectedBlogPost);\n            return (\n                <Card>\n                    <Card.Header>Blog Post</Card.Header>\n                    <ListGroup>\n                        <ListGroupItem>{this.props.selectedBlogPost.title}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.body}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.author}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.date}</ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedBlogPost.replies.map((reply, i) =>\n                            <p key={i}>\n                                <b>{reply.authorId}</b>&nbsp; {reply.body}\n                            </p>\n                        )}\n                    </Card.Body>\n                </Card>\n            )\n        }\n\n        return (\n            <div>\n                <DetailInfo />\n                <ResponseForm id={this.props.selectedBlogPost}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBlogPost: state.blog.selectedBlogPost\n    }\n}\n\nexport default connect(mapStateToProps)(BlogDetail);\n\n\n\n<ListGroup>\n                        <ListGroupItem>{this.props.selectedMovie.title}</ListGroupItem>\n                        <ListGroupItem>\n                            {this.props.selectedMovie.actors.map((actor, i) =>\n                                <p key={i}>\n                                    <b>{actor.actorName}</b> {actor.characterName}\n                                </p>)}\n                        </ListGroupItem>\n                        <ListGroupItem><h4><BsStarFill/> {this.props.selectedMovie.avgRating}</h4></ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedMovie.reviews.map((review, i) =>\n                            <p key={i}>\n                                <b>{review.username}</b>&nbsp; {review.review}\n                                &nbsp;  <BsStarFill /> {review.rating}\n                            </p>\n                        )}\n                    </Card.Body>\n\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}