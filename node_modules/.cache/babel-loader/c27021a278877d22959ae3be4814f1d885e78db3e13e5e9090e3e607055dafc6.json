{"ast":null,"code":"var _jsxFileName = \"/Users/brycebaker/Desktop/acm-site/src/components/blogdetail.js\";\nimport React, { Component } from 'react';\nimport { fetchBlogPost } from \"../actions/blogActions\";\nimport { setBlogPost } from \"../actions/blogActions\";\nimport { connect } from 'react-redux';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport ResponseForm from './responseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BlogDetail extends Component {\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    if (this.props.selectedBlogPost == null) {\n      dispatch(fetchBlogPost(this.props.blogId));\n    }\n  }\n  render() {\n    const DetailInfo = () => {\n      if (!this.props.selectedBlogPost) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }, this);\n      }\n      console.log(selectedBlogPost.replies);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Blog Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: this.props.selectedBlogPost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: this.props.selectedBlogPost.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: this.props.selectedBlogPost.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: this.props.selectedBlogPost.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: this.props.selectedBlogPost.replies.map((reply, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: reply.authorId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), \"\\xA0 \", reply.body]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DetailInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponseForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    selectedBlogPost: state.blog.selectedBlogPost\n  };\n};\nexport default connect(mapStateToProps)(BlogDetail);\n\n/*\n<ListGroup>\n                        <ListGroupItem>{this.props.selectedMovie.title}</ListGroupItem>\n                        <ListGroupItem>\n                            {this.props.selectedMovie.actors.map((actor, i) =>\n                                <p key={i}>\n                                    <b>{actor.actorName}</b> {actor.characterName}\n                                </p>)}\n                        </ListGroupItem>\n                        <ListGroupItem><h4><BsStarFill/> {this.props.selectedMovie.avgRating}</h4></ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedMovie.reviews.map((review, i) =>\n                            <p key={i}>\n                                <b>{review.username}</b>&nbsp; {review.review}\n                                &nbsp;  <BsStarFill /> {review.rating}\n                            </p>\n                        )}\n                    </Card.Body>\n\n*/","map":{"version":3,"names":["React","Component","fetchBlogPost","setBlogPost","connect","Card","ListGroup","ListGroupItem","ResponseForm","jsxDEV","_jsxDEV","BlogDetail","componentDidMount","dispatch","props","selectedBlogPost","blogId","render","DetailInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","replies","Header","title","body","author","date","Body","map","reply","i","authorId","mapStateToProps","state","blog"],"sources":["/Users/brycebaker/Desktop/acm-site/src/components/blogdetail.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { fetchBlogPost } from \"../actions/blogActions\";\nimport { setBlogPost } from \"../actions/blogActions\";\nimport {connect} from 'react-redux';\nimport {Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport ResponseForm from './responseForm';\n\nclass BlogDetail extends Component {\n\n    componentDidMount() {\n        const {dispatch} = this.props;\n        if (this.props.selectedBlogPost == null) {\n            dispatch(fetchBlogPost(this.props.blogId));\n        }\n    }\n\n    render() {\n        const DetailInfo = () => {\n            if (!this.props.selectedBlogPost) {\n                return <div>Loading....</div>\n            }\n            console.log(selectedBlogPost.replies);\n            return (\n                <Card>\n                    <Card.Header>Blog Post</Card.Header>\n                    <ListGroup>\n                        <ListGroupItem>{this.props.selectedBlogPost.title}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.body}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.author}</ListGroupItem>\n                        <ListGroupItem>{this.props.selectedBlogPost.date}</ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedBlogPost.replies.map((reply, i) =>\n                            <p key={i}>\n                                <b>{reply.authorId}</b>&nbsp; {reply.body}\n                            </p>\n                        )}\n                    </Card.Body>\n                </Card>\n            )\n        }\n\n        return (\n            <div>\n                <DetailInfo />\n                <ResponseForm />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBlogPost: state.blog.selectedBlogPost\n    }\n}\n\nexport default connect(mapStateToProps)(BlogDetail);\n\n\n/*\n<ListGroup>\n                        <ListGroupItem>{this.props.selectedMovie.title}</ListGroupItem>\n                        <ListGroupItem>\n                            {this.props.selectedMovie.actors.map((actor, i) =>\n                                <p key={i}>\n                                    <b>{actor.actorName}</b> {actor.characterName}\n                                </p>)}\n                        </ListGroupItem>\n                        <ListGroupItem><h4><BsStarFill/> {this.props.selectedMovie.avgRating}</h4></ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        {this.props.selectedMovie.reviews.map((review, i) =>\n                            <p key={i}>\n                                <b>{review.username}</b>&nbsp; {review.review}\n                                &nbsp;  <BsStarFill /> {review.rating}\n                            </p>\n                        )}\n                    </Card.Body>\n\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}