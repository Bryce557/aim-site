{"ast":null,"code":"import actionTypes from '../constants/actionTypes';\nconst env = process.env;\nfunction userLoggedIn(email) {\n  return {\n    type: actionTypes.USER_LOGGEDIN\n  };\n}\nfunction logout() {\n  return {\n    type: actionTypes.USER_LOGOUT\n  };\n}\nexport function submitLogin(data) {\n  return dispatch => {\n    return fetch(`${env.REACT_APP_API_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      localStorage.setItem('email', data.email);\n      localStorage.setItem('token', res.token);\n      dispatch(userLoggedIn(data.email));\n    }).catch(e => console.log(e));\n  };\n}\nexport function submitRegister(data) {\n  console.log(data);\n  return dispatch => {\n    return fetch(`${env.REACT_APP_API_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      dispatch(submitLogin(data));\n    }).catch(e => console.log(e));\n  };\n}\nexport function logoutUser() {\n  return dispatch => {\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    dispatch(logout());\n  };\n}","map":{"version":3,"names":["actionTypes","env","process","userLoggedIn","email","type","USER_LOGGEDIN","logout","USER_LOGOUT","submitLogin","data","dispatch","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","localStorage","setItem","token","catch","e","console","log","submitRegister","logoutUser","removeItem"],"sources":["/Users/brycebaker/Desktop/acm-site/src/actions/authActions.js"],"sourcesContent":["import actionTypes from '../constants/actionTypes';\nconst env = process.env;\n\nfunction userLoggedIn(email) {\n    return {\n        type: actionTypes.USER_LOGGEDIN,\n    }\n}\n\nfunction logout() {\n    return {\n        type: actionTypes.USER_LOGOUT\n    }\n}\n\nexport function submitLogin(data) {\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/signin`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'\n        }).then((response) => {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json()\n        }).then((res) => {\n            localStorage.setItem('email', data.email);\n            localStorage.setItem('token', res.token);\n\n            dispatch(userLoggedIn(data.email));\n        }).catch((e) => console.log(e));\n    }\n}\n\nexport function submitRegister(data) {\n    console.log(data);\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/signup`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'\n        }).then((response) => {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json()\n        }).then((res) => {\n            dispatch(submitLogin(data));\n        }).catch((e) => console.log(e));\n    }\n}\n\nexport function logoutUser() {\n    return dispatch => {\n        localStorage.removeItem('email');\n        localStorage.removeItem('token');\n        dispatch(logout())\n    }\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAClD,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAG;AAEvB,SAASE,YAAYA,CAACC,KAAK,EAAE;EACzB,OAAO;IACHC,IAAI,EAAEL,WAAW,CAACM;EACtB,CAAC;AACL;AAEA,SAASC,MAAMA,CAAA,EAAG;EACd,OAAO;IACHF,IAAI,EAAEL,WAAW,CAACQ;EACtB,CAAC;AACL;AAEA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAE;EAC9B,OAAOC,QAAQ,IAAI;IACf,OAAOC,KAAK,CAAE,GAAEX,GAAG,CAACY,iBAAkB,SAAQ,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;MAC1BS,IAAI,EAAE;IACV,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAMC,KAAK,CAACF,QAAQ,CAACG,UAAU,CAAC;MACpC;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACL,IAAI,CAAEM,GAAG,IAAK;MACbC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACN,KAAK,CAAC;MACzCuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,GAAG,CAACG,KAAK,CAAC;MAExClB,QAAQ,CAACR,YAAY,CAACO,IAAI,CAACN,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC0B,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EACnC,CAAC;AACL;AAEA,OAAO,SAASG,cAAcA,CAACxB,IAAI,EAAE;EACjCsB,OAAO,CAACC,GAAG,CAACvB,IAAI,CAAC;EACjB,OAAOC,QAAQ,IAAI;IACf,OAAOC,KAAK,CAAE,GAAEX,GAAG,CAACY,iBAAkB,SAAQ,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;MAC1BS,IAAI,EAAE;IACV,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAMC,KAAK,CAACF,QAAQ,CAACG,UAAU,CAAC;MACpC;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACL,IAAI,CAAEM,GAAG,IAAK;MACbf,QAAQ,CAACF,WAAW,CAACC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAACoB,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EACnC,CAAC;AACL;AAEA,OAAO,SAASI,UAAUA,CAAA,EAAG;EACzB,OAAOxB,QAAQ,IAAI;IACfgB,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCzB,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC;EACtB,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}