{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from \"../reducers/authReducer\";\nimport blogReducer from \"../reducers/blogReducer\";\nconst middlewares = [thunk];\nif (process.env.NODE_ENV === 'development') {\n  const {\n    logger\n  } = require('redux-logger');\n  middlewares.push(logger);\n}\nconst store = createStore(combineReducers({\n  auth: authReducer,\n  blog: blogReducer\n}), applyMiddleware(...middlewares));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","authReducer","blogReducer","middlewares","process","env","NODE_ENV","logger","require","push","store","auth","blog"],"sources":["/Users/brycebaker/Desktop/acm-site/src/stores/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from \"../reducers/authReducer\";\nimport blogReducer from \"../reducers/blogReducer\";\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    const { logger } = require('redux-logger');\n\n    middlewares.push(logger);\n}\n\nconst store = createStore(\n    combineReducers( {\n        auth: authReducer,\n        blog: blogReducer\n    }),\n    applyMiddleware(\n        ...middlewares\n    )\n);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,MAAMC,WAAW,GAAG,CAACH,KAAK,CAAC;AAE3B,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EACxC,MAAM;IAAEC;EAAO,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;EAE1CL,WAAW,CAACM,IAAI,CAACF,MAAM,CAAC;AAC5B;AAEA,MAAMG,KAAK,GAAGb,WAAW,CACrBC,eAAe,CAAE;EACba,IAAI,EAAEV,WAAW;EACjBW,IAAI,EAAEV;AACV,CAAC,CAAC,EACFH,eAAe,CACX,GAAGI,WACP,CACJ,CAAC;AAED,eAAeO,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}